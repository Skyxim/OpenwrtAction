name: LEAN
on:
  schedule:
    - cron: 0 5 1 * * 
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: fetch dependencies
        run: |
          sudo apt update -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils \
          rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
      - name: fetch code
        run: |
          git clone https://github.com/coolsnowwolf/lede openwrt/
          sudo chmod +x *.sh
          cd openwrt/
          ../luci.sh
      - name: prepare
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          cp ../config-lean .config
          cat .config
          make -j$(($(nproc) + 1)) download V=s
      - name: build
        run: |
          cd openwrt
          make -j$(($(nproc) + 1)) V=s
      - name: Organize files
        id: organize
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv openwrt/bin/targets/x86/64/* ./artifact/
      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: openwrt_lean_x86
          path: ./artifact/
      - name: zip
        run: |
          cd ./artifact/
          zip -q packages.zip packages/*
          rm -rf packages
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1.8.0
        with:
          name: OpenWRT-LEAN-X86
          allowUpdates: true
          tag: x86
          commit: main
          replacesArtifacts: true
          token: ${{ secrets.TOKEN }}
          artifacts: ./artifact/*
